[build-system]
requires = [
    "nox=^2020.12.31",
    "nox-poetry=^0.7.1",
    "poetry==^1.1.4"
]
build-backend = "nox.__main__:main"

[tool.poetry]
name = "minisculus"
version = "0.0.1"
description = "My attempt at the minisculus challenge."
license = "mit"
authors = [
    "Richard Vodden <richard@vodden.com>"
]
readme = "README.rst"
packages = [{ include = "minisculus" }]
repository = "https://github.com/rvodden/minisculus"
homepage = "https://github.com/rvodden/minisculus"
keywords = ['minisculus']

[tool.poetry.dependencies]
pydantic = "^1.7.3"
python = "^3.8"

[tool.poetry.dev-dependencies]
auto-behave = "^0.0.7"
behave = "^1.2.6"
black = "^20.8b1"
blackdoc = "^0.3"
commitizen = "^2.10.0"
coverage = "^5.3"
darglint = "^1.5.8"
flake8 = "^3.7.9"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.1"
flake8-bugbear = "^20.11.1"
flake8-docstrings = "^1.5.0"
flake8-import-order = "^0.18.1"
flake8-mypy = "^17.8.0"
hypothesis = "^6.0.2"
mypy = "^0.790"
nox = "^2020.8.22"
pre-commit = "^2.7.1"
pylint = "^2.6.0"
pyhamcrest = "^2.0.2"
pytest = "^6.1.1"
pytest-cov = "^2.10.1"
safety = "^1.9.0"
sphinxcontrib-mermaid = "^0.5.0"
typed-ast = "^1.4.1"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
junit_duration_report = "call"
junit_suite_name = "minisculus"
junit_family = "xunit1"
addopts = "--doctest-modules"
log_cli = true
log_cli_level = "debug"

[tool.coverage.run]
branch = true
source = ["minisculus/"]

[tool.coverage.report]
show_missing = true

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
known_third_party = "celery,django,environ,pyquery,pytz,redis,requests,rest_framework"

[mypy]
# follow and type check all modules, including third-party ones
follow_imports = "normal"
# precede all errors with “note” messages explaining the context of the error
show_error_context = true
# This is the last resort solution, we should fine-tune it with
# specific sections [mypy-<library_name>] for libraries that
# have missing stubs or issues with imports
# https://mypy.readthedocs.io/en/latest/running_mypy.html#missing-imports
ignore_missing_imports = true
# Check all defs, even untyped ones (with less precise semantics)
check_untyped_defs = true
# All functions/methods should have complete signatures
# (this basically disallows gradual typing for all module-level definitions)
disallow_incomplete_defs = true
# all writes to cache should be discarded
# (it's different from incremental mode)
cache_dir = "/dev/null"
# report an error whenever the code uses an unnecessary cast
# that can safely be removed.
warn_redundant_casts = true
# warn about unused [mypy-<pattern>] config file sections.
warn_unused_configs = true
# find gaps and omissions in type stubs, including third-party ones
warn_incomplete_stub = true
# helps to find any `# type: ignore` annotations that we no longer need
warn_unused_ignores = true
# All arguments that allow None should be annotated as Optional[T]
strict_optional = true
# stop treating arguments with a None default value as having
# an implicit Optional[T] type
no_implicit_optional = true
